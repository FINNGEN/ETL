-- Description: Creates the tables for the input register data and finngenid data
-- Parameters: 
-- - @schema_etl_input: name of the schema with the input tables for the ETL.

BEGIN TRANSACTION;
-- Drop tables if they exist
IF OBJECT_ID('@schema_etl_input.finngenid_info', 'U') IS NOT NULL
    DROP TABLE @schema_etl_input.finngenid_info;
IF OBJECT_ID('@schema_etl_input.hilmo', 'U') IS NOT NULL
    DROP TABLE @schema_etl_input.hilmo;
IF OBJECT_ID('@schema_etl_input.reimb', 'U') IS NOT NULL
    DROP TABLE @schema_etl_input.reimb;
IF OBJECT_ID('@schema_etl_input.death_register', 'U') IS NOT NULL
    DROP TABLE @schema_etl_input.death_register;
IF OBJECT_ID('@schema_etl_input.prim_out', 'U') IS NOT NULL
    DROP TABLE @schema_etl_input.prim_out;
IF OBJECT_ID('@schema_etl_input.canc', 'U') IS NOT NULL
    DROP TABLE @schema_etl_input.canc;
IF OBJECT_ID('@schema_etl_input.purch', 'U') IS NOT NULL
    DROP TABLE @schema_etl_input.purch;

-- Create the finngenid_info table
CREATE TABLE @schema_etl_input.finngenid_info (
  FINNGENID VARCHAR(255) NOT NULL,
  BL_YEAR INT,
  BL_AGE FLOAT,
  SEX VARCHAR(255),
  HEIGHT INT,
  HEIGHT_AGE FLOAT,
  WEIGHT INT,
  WEIGHT_AGE FLOAT,
  SMOKE2 VARCHAR(255),
  SMOKE3 VARCHAR(255),
  SMOKE5 VARCHAR(255),
  SMOKE_AGE FLOAT,
  regionofbirth INT,
  regionofbirthname VARCHAR(255),
  movedabroad INT,
  NUMBER_OF_OFFSPRING INT,
  APPROX_BIRTH_DATE DATE,
  FU_END_AGE FLOAT
);

-- Create the hilmo table
CREATE TABLE @schema_etl_input.hilmo (
  FINNGENID VARCHAR(255),
  SOURCE VARCHAR(255),
  EVENT_AGE FLOAT,
  APPROX_EVENT_DAY DATE,
  CODE1_ICD_SYMPTOM_OPERATION_CODE VARCHAR(255),
  CODE2_ICD_CAUSE_NA VARCHAR(255),
  CODE3_ATC_CODE_NA VARCHAR(255),
  CODE4_HOSPITAL_DAYS_NA VARCHAR(255),
  CODE5_SERVICE_SECTOR VARCHAR(255),
  CODE6_SPECIALITY VARCHAR(255),
  CODE7_HOSPITAL_TYPE VARCHAR(255),
  CODE8_CONTACT_TYPE VARCHAR(255),
  CODE9_URGENCY VARCHAR(255),
  ICDVER VARCHAR(255),
  CATEGORY VARCHAR(255),
  INDEX VARCHAR(255)
);

-- Create the reimb table
CREATE TABLE @schema_etl_input.reimb (
  FINNGENID VARCHAR(255),
  SOURCE VARCHAR(255),
  EVENT_AGE FLOAT,
  APPROX_EVENT_DAY DATE,
  CODE1_KELA_DISEASE VARCHAR(255),
  CODE2_ICD VARCHAR(255),
  CODE3_NA VARCHAR(255),
  CODE4_NA VARCHAR(255),
  ICDVER VARCHAR(255),
  CATEGORY VARCHAR(255),
  INDEX VARCHAR(255)
);

-- Create the death_register table
CREATE TABLE @schema_etl_input.death_register (
  FINNGENID VARCHAR(255),
  SOURCE VARCHAR(255),
  EVENT_AGE FLOAT,
  APPROX_EVENT_DAY DATE,
  CODE1_CAUSE_OF_DEATH VARCHAR(255),
  CODE2_NA VARCHAR(255),
  CODE3_NA VARCHAR(255),
  CODE4_NA VARCHAR(255),
  ICDVER VARCHAR(255),
  CATEGORY VARCHAR(255),
  INDEX VARCHAR(255)
);

-- Create the prim_out table
CREATE TABLE @schema_etl_input.prim_out (
  FINNGENID VARCHAR(255),
  SOURCE VARCHAR(255),
  EVENT_AGE FLOAT,
  APPROX_EVENT_DAY DATE,
  CODE1_CODE VARCHAR(255),
  CODE2_NA VARCHAR(255),
  CODE3_NA VARCHAR(255),
  CODE4_NA VARCHAR(255),
  CODE5_CONTACT_TYPE VARCHAR(255),
  CODE6_SERVICE_SECTOR VARCHAR(255),
  CODE7_PROFESSIONAL_CODE VARCHAR(255),
  ICDVER VARCHAR(255),
  CATEGORY VARCHAR(255),
  INDEX VARCHAR(255)
);

-- Create the canc table
CREATE TABLE @schema_etl_input.canc (
  FINNGENID VARCHAR(255),
  SOURCE VARCHAR(255),
  EVENT_AGE FLOAT,
  APPROX_EVENT_DAY DATE,
  CODE1_TOPO VARCHAR(255),
  CODE2_MORPHO VARCHAR(255),
  CODE3_BEH VARCHAR(255),
  CODE4_NA VARCHAR(255),
  ICDVER VARCHAR(255),
  CATEGORY VARCHAR(255),
  INDEX VARCHAR(255)
);

-- Create the purch table
CREATE TABLE @schema_etl_input.purch (
  FINNGENID VARCHAR(255),
  SOURCE VARCHAR(255),
  EVENT_AGE FLOAT,
  APPROX_EVENT_DAY DATE,
  CODE1_ATC_CODE VARCHAR(255),
  CODE2_SAIR VARCHAR(255),
  CODE3_VNRO VARCHAR(255),
  CODE4_PLKM VARCHAR(255),
  CODE5_REIMBURSEMENT VARCHAR(255),
  CODE6_ADDITIONAL_REIMBURSEMENT VARCHAR(255),
  CODE7_REIMBURSEMENT_CATEGORY VARCHAR(255),
  ICDVER VARCHAR(255),
  CATEGORY VARCHAR(255),
  INDEX VARCHAR(255)
);

COMMIT TRANSACTION;
